using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Years.Utils;

namespace Years.Year2016
{
    public class Day06 : IDay
    {
        public int Day => 6;
        public int Year => 2016;

        public void ProblemOne()
        {
            var lines = Input.Split(new string[] { "\r\n" }, StringSplitOptions.None);
            //char[,] chars = new char[width, lines.Length];

            List<List<char>> chars = new List<List<char>>();

            for (int y = 0; y < 8; y++)
            {
                chars.Add(new List<char>());
                for (int x = 0; x < lines.Count(); x++)
                {
                    chars[y].Add(lines[x][y]);
                }
            }

            string result = "";
            for (int i = 0; i < 8; i++)
            {
                result += MostAppearingChar(chars[i]);
            }
            Console.WriteLine(result);
        }

        public void ProblemTwo()
        {
            var lines = Input.Split(new string[] { "\r\n" }, StringSplitOptions.None);
            //char[,] chars = new char[width, lines.Length];

            List<List<char>> chars = new List<List<char>>();

            for (int y = 0; y < 8; y++)
            {
                chars.Add(new List<char>());
                for (int x = 0; x < lines.Count(); x++)
                {
                    chars[y].Add(lines[x][y]);
                }
            }

            string result = "";
            for (int i = 0; i < 8; i++)
            {
                result += LeastAppearingChar(chars[i]);
            }
            Console.WriteLine(result);
        }

        private char MostAppearingChar(List<char> chars)
        {
            Dictionary<char, int> dict = new Dictionary<char, int>();
            foreach (char c in chars)
            {
                if (dict.ContainsKey(c))
                {
                    dict[c]++;
                }
                else
                {
                    dict[c] = 1;
                }
            }

            return dict.First(i => i.Value == dict.Max(j => j.Value)).Key;
        }

        private char LeastAppearingChar(List<char> chars)
        {
            Dictionary<char, int> dict = new Dictionary<char, int>();
            foreach (char c in chars)
            {
                if (dict.ContainsKey(c))
                {
                    dict[c]++;
                }
                else
                {
                    dict[c] = 1;
                }
            }

            return dict.First(i => i.Value == dict.Min(j => j.Value)).Key;
        }

        private void ParseInput(string input)
        {
            var lines = input.Split(new string[] { "\r\n" }, StringSplitOptions.None);
            foreach (var line in lines)
            {
                var bits = line.Split(' ');
            }
        }


        private const string Example = @"eedadn
drvtee
eandsr
raavrd
atevrs
tsrnev
sdttsa
rasrtv
nssdts
ntnada
svetve
tesnvt
vntsnd
vrdear
dvrsen
enarar";

        private const string Input = @"focdealm
ggsipflx
rvibwxbm
vqrfyyrh
hsjtzpgs
ozymxpoy
jiecwags
lztseufl
dfwibwsn
skiuhnwl
kamgzqog
axeqncwa
gobivxto
nwgoryhd
tzrlitrq
uzoldxbv
zsteobha
pfcgdqkg
prcqlunp
iwivemkh
vpkilupm
ewuznabz
veaptost
cyvirffe
ejhhqfng
ibsqztgg
xzczkboh
bckhbodf
vbycgonv
esmoyyku
unccgdgj
cqwnqlzs
edoqmykb
bkvzlhyq
yzrspisn
zlzibhca
povnweaf
muyfegxe
oaojqfrl
gwesjxws
rjknfyeh
dkquvctc
cfuzhxoj
tdzzzfqc
lzjzsyni
wjfxckkf
xmhyjhop
kmtllzxs
yohearbj
ilmvyxgn
erczytzw
kuetjsba
vwkpollq
tujwluzc
jlvedjcp
acmoaoji
gqoliyen
agckavhf
ottamfdm
jxwlyotw
tdpsrapj
carwwmqc
ykaipjdj
zdfrbduu
vwiiosud
uoixglbw
yegbwxjb
wbpqqqfv
wpynmyqi
aqdkscgd
oghnbnnf
duftexbb
ttvbofay
jferymwy
hqzimpiq
sifyogml
nymxqbws
dhdlhhqp
urtuhcrj
giwcunfq
fxgretsl
maihqkpk
pdxfkcru
xixtthag
vuzxqzzi
wxxeleug
xpopxkzo
hgcsyuad
xcbydxnx
kxocfakp
erxdajeq
tliakzhh
iygbbuxs
qlgqthpp
duzzptwk
gfnqdotc
kjayxeqf
fehitfar
yemshppn
igtczmmw
gfajhxch
bslzmgwo
xpmhmirx
yhlwlupt
nymajupw
tlhgdefw
bqkudizc
lucrhmnm
svkoaqzz
luggfivf
ckawtiwy
eeivawhj
qdmmmvdl
quezzzqa
oimsfsuo
jdvcknqu
aupohqbk
llwsasnz
zlpljtjl
xfylqxlv
zqppxkul
varoizrq
yxryqwso
gsscetca
gcbdgqyo
hsdnvteo
pxtoreoc
rwjdkwzs
zdgofynf
polyntkx
jhulgrnf
ycbzpdpw
bzvdbwsy
vydjbucs
rxadwwuo
ccnvzjak
nombazjc
lbxwdasr
cbdlkiha
sdomdvow
phjnkkkp
nmtmrnyz
nxsvmcwk
hqimjvir
vmjhhuuv
zilhgqlb
gfgbibgg
imxxugfe
wtaffkbj
lyguqvjs
pejslhls
qjnefwii
oanqnnnc
kcjyfwxm
zoxjwxmw
ihmokcrm
uebsbhfr
fxvjiorr
ebjiucyt
ofutlokv
mdfnsuyr
dzviwqdk
umwyaijz
hdqwfalt
qtyrouwh
lkzcrtwa
dtqvwzke
buplmmca
xxepjuvj
omyotlar
ytndbwhi
sbntigym
mphrnsme
xiymeoxr
kcujxcih
bydnchgk
snwdjlip
yljsymtv
tyhbpoab
zlqhvzxl
akbtnzop
xnpjmysj
znhednen
vbcsocrm
ywjajour
ejngbqev
rstykfhc
cbcnoexq
mzlxvxwj
vfdqaalp
nbszzozr
dqpyojid
hfuqilbl
uoackeup
shqkcsmr
jbdasroe
fmlkvsnt
cnomxkvk
unbsfncq
bnzxltxe
bbadfyin
skmhtmhn
xkypwglb
flbfiioo
fzywneyg
srngxbut
qtodeuxg
xvawfqli
nyfmrdsn
rdjysbxj
spmezvvj
ofoivcuc
touzgqzx
mfqyzagc
dmaurbdv
gqnrlyuw
wuppusoh
qgstihuy
uldnlrpi
xaskgwim
djjrphid
qjhmctyu
osfenjdn
zvoahhkk
xiuyatyn
fepobmjh
kmugpjpw
aikpozqs
kmgmazif
gbzlodzb
hrocqadn
noekklwb
vzwhnkvx
osrspxsc
iekmqgua
xeehndee
quttqjav
htoptweo
cyicmwba
jltlwlyy
qvccdkig
bibggekq
kwfwvrfg
eycwlcup
murgcddl
lyukeubx
twbpzoyg
dkcvzele
fozhtmcz
frugeivm
qjbhpdpr
tgkkeroo
ryuvgqgc
jhixykqn
wsebmcrn
wohtjpgu
isflpxxt
xggwmamk
tfwdsrfe
cpjvcghr
fekhexdb
zcwzqofh
awnfiqzu
ihekvqby
rqaqajij
cumouwzx
ccyrflxd
rredygrk
patcpktn
mjnwuefa
tuhgyfsw
mjpxrgkx
hupfjqxo
mgkclcrf
jkmkhkci
nkcrwgqd
apmfiqpg
pxiawshv
ledhpfaz
btikmkwj
jwosopir
mgxftcte
phkbcdex
uakftnbh
fnkmdecn
swrvbjwj
hphskevf
trnpfdmy
odvmmqss
akvqgemq
zyqlkwdm
nbnaqjsa
mbnogzyt
mchaxjxu
tcqqerqz
ayylasgq
zqbrjfli
ccjjnfat
lvlpdjqu
luiabalt
qsvkepvz
dtyobsiy
jkulvrnc
thwjbzkh
vvhrwbkx
fhxejrff
bacuriaz
grmtyude
feynnckb
hfdepyjn
lvsfflyc
xfrgfgeh
vqqybtba
ntlfjqjt
zadauvmg
itukkpqf
mrnnfgmf
hpjqvppo
dshgwmgb
pzxeoymv
nlokvrio
cgcaxffl
dvimsnxu
iczcvwho
lkxumswj
satmovog
ujwknitl
halkgpaa
pnttnodc
adsvsumi
jwerfpko
yhsjqytk
vpevemez
yvjmltwj
vdoeippw
siouxait
ftrspdpx
hptwqlmz
haewgrft
watbdvqz
eiptzrvr
msvbioso
dnjeoucg
qixvmlem
mqquklfq
sszagakl
khfbexqb
uysydrlc
inawynse
whuonlhq
eshukapj
vtrepdxm
pgjjcisd
puiunlts
replddlv
emjyyhmd
aahwhond
laneyzsj
jnlkdpyb
sqxrctuo
wmmyybvl
ldyvqldz
bzbrsdjr
ekxwhzte
gnpqywzz
afsfbtte
ggkbrgds
dlawfrbp
opypolpc
cqpxcfgh
ynmtlgvl
slfmicyv
ooguwxjc
tewmtlty
wcdwansw
ktercyvw
qrgxrzne
wvbhflls
dpfjwbmm
uigmcaow
ejzhkxic
fbewvcoh
jxbtcmwn
ywiktjqn
rftnjqpp
yalixnnw
srdsiwgy
pdpdrynx
ioroheqp
vpvvnmad
tqksxfsp
snzxciua
nrhtoskm
crfvapzk
wndbcxvf
syffkzmv
nneibkaf
unuvhnli
ujhdjkvs
gmyqgvdr
jedfxwje
bcshopnu
xgiprhyv
onibkkoq
riguljez
yodzrfeu
ogbwakaa
ymrltbxa
ourmuhrx
yxwixtuv
ptnxdvdm
oskvgexz
fbigwiaw
xctckzmy
khwiyvmw
qbqbtxpr
kavzlngz
bbklqvzt
rwlzppbq
upirhhca
ezlaqdgo
ieuynchi
qmjtojzq
qrricseq
hxkrsfmw
nssfpnws
tiaziudb
rvskpahe
pplmppvi
jxpyidio
teudseap
aclyhavi
yqafhkyd
drjhcqgu
zvfcfbjc
sqfuuezn
gwtsupqk
czakgbiy
wknfzbyj
ooxwycji
wxymanlx
ewbtpqtl
jmwnxydh
ceqdllqb
jhdbejmt
mazzsanu
uypyqlvh
itnrzbie
miuegdjz
tqxeipin
kbareizb
jgjxrycy
epshhech
oicruxsz
ptxgidha
bmgnvjtr
qvwzlmgq
cvwtdffi
ibzasmru
jfenrbjd
nrkgwvcz
hlmghdgd
emhdaicl
wdwrzocv
spwjcrud
dsgilvqn
phvmafqk
iiihsfff
uvcqgtyc
doxkrzzw
hktdpsbv
evqojani
kzapomdx
ewtbrdtb
rgshzyxq
ltinzxld
cazrrlcu
irfxunbt
rmqcsbvm
gddexbsb
qladhkpd
xlvzpmab
wirftlbu
fxfqjubx
sgogtrcb
zlqxxwfy
djgtbihr
gslssgsu
wytydgje
vmovsmdh
ogyiuirh
mtfxzrrx
kcpfbemc
blreqhel
zjsjqqyh
ciqwtpvk
yjcinpaa
wxbxagui
aqbjqmig
ybaeuhew
mjzpnttv
mevjcrqp
fpmgzgco
gklesvof
jzfssvvx
aynfmwhl
euosbnhf
lcebcalt
kvsuuyyt
ltranzur
nlledtpz
vqdrgckr
yodxnjpt
uyznwnni
ckczwqkp
uxtjgoee
otdoyaxg
lbccbfgi
mhzjujrp
cekkthvf
fbvpuhog
nzfannep
rnnqusey
aiocsiyy
uvcbtfwr
bzqirxrg
qnmfgshq
inyevvbn
wswvhglx
huxqxwwb
fdutjnfq
adajhsjk
ahllesij
tcfawzgu
zfdgmtry
byznvpfp
duunxdad
kgadxmdf
ptfaovzv
uhuvlivs
xcoqrmeu
nnnlvmga
zwrbykek
lvpumidd
hieivrnt
vrwqsvci
npbplsvm
ougzcgty
rzvgzooo
iehafkto
rzspzjne
dzvvhvld
fgkmmfda
xjsnnlmd
igvjrsuk
narcempo
xrhoiugu
ghxbpomr
waxtcbcg
tmqgsejx
dobaxhel
mpzgjyww
ehyfvnaz
zxrdlajd
hfquyvok
aqxxdcqv
vjbukram
rjvttibk
pryxgzrd
hcqpxgee
qjgqvoal
wmbuvcty
zpgxmdiu
foequjps
lmdjwyfj
mhqudwzv
lrzkttsw
owyatnru
gwppbbfb
fvlkdsjk
pwhlvjtb
zgldiibp
sokjzgvq
kfourwqm
nfqoyvsz
hdiwmrhk
nnapsbht
blqjjtwy
aknoauti
uhgowkyx
uypyjorh
blfeioot
kzbukpxk
kfmbxgle
zmegahum
upjouzrg
tkedvzfy
bxwxuutn
rrwxobjp
jdujkhox
jkycewdx
ivlbibns
qjshodxf
bektjeou
wotjfgfl
rjrcfiug
aklhubjf
kwpnaezt
lsqvzdom
pxzvorct
vcxazyzs
xsszjsjq
ydgfsukl
gqxpcrla
rvsoxkhy
rschupcm
ivlpikxi
etrnyvkh
byzymjms
qagdcqww
sxnausxs
giuitchj
qgolehtg
keeskeyb";
        
    }
}